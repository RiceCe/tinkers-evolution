buildscript {
    repositories {
        jcenter()
        maven { url "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'

version = "1.0.39"
group = "xyz.phanta.tconevo"
archivesBaseName = "tconevo-1.12.2"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
    accessTransformer = file('src/main/resources/META-INF/tconevo_at.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    mavenLocal()
    maven {
        name 'CurseMaven'
        url 'https://www.cursemaven.com/'
    }
    maven {
        name 'DVS1 Repo'
        url 'http://dvs1.progwml6.com/files/maven/'
    }
    maven {
        name "OpenComputers"
        url "https://maven.cil.li"
    }
    maven {
        name "CoFH Maven"
        url "http://maven.covers1624.net"
    }
    maven {
        name "Thiakil Maven"
        url "http://maven.thiakil.com/"
    }
    maven {
        name "BlameJared Maven"
        url "https://maven.blamejared.com/"
    }
    maven {
        name "Bluexin Maven"
        url "http://maven.bluexin.be/repository/snapshots/"
    }
    maven {
        name "tterrag Maven"
        url "https://maven.tterrag.com/"
    }
    maven {
        name "sfPlayer1 Maven"
        url "https://maven.ic2.player.to/"
    }
    maven {
        name "Darkhax Maven"
        url "https://maven.mcmoddev.com"
    }
}

dependencies { // THE BEAST
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'
    implementation 'io.github.phantamanta44.libnine:libnine-1.12.2:1.2.0'
    implementation fg.deobf('mezz.jei:jei_1.12.2:4.15.0.293')
    implementation fg.deobf('slimeknights.mantle:Mantle:1.12-1.3.3.56')
    implementation fg.deobf('slimeknights:TConstruct:1.12.2-2.13.0.184')
    implementation fg.deobf('curse.maven:constructs-armory-287683:2882794') // 1.2.5.4
    implementation fg.deobf('com.azanor.baubles:Baubles:1.12-1.5.2')
    implementation fg.deobf('codechicken:CodeChickenLib:1.12.2-3.2.3.358:universal')
    implementation fg.deobf('cofh:RedstoneFlux:1.12-2.1.0.7:universal')
    implementation fg.deobf('curse.maven:brandons-core-231382:2867147') // 2.4.18.210
    implementation fg.deobf('curse.maven:draconic-evolution-223565:2867186') // 2.3.25.351
    implementation fg.deobf('vazkii.botania:Botania:r1.10-363.148')
    implementation fg.deobf('com.teamwizardry.librarianlib:librarianlib-1.12.2:4.19.1')
    implementation fg.deobf('curse.maven:natural-pledge-247704:2740703') // r3.1.2
    implementation fg.deobf('cofh:CoFHCore:1.12.2-4.6.3.27:universal')
    implementation fg.deobf('cofh:ThermalFoundation:1.12.2-2.6.3.27:universal')
    implementation fg.deobf('cofh:ThermalExpansion:1.12.2-5.5.4.43:universal')
    implementation fg.deobf('curse.maven:industrial-foregoing-266515:2745321')
    implementation fg.deobf('appeng:appliedenergistics2:rv6-stable-7')
    implementation fg.deobf('curse.maven:mekanism-268560:2835175') // 9.8.3.390
    implementation fg.deobf('curse.maven:mekanism-generators-268566:2835177') // 9.8.3.390
    implementation fg.deobf('curse.maven:actually-additions-228404:2844115') // r151-2
    implementation fg.deobf('curse.maven:thaumcraft-223628:2629023') // 6.1.BETA26
    implementation fg.deobf('curse.maven:astral-sorcery-241721:2971187') // 1.10.24
    implementation fg.deobf('curse.maven:blood-magic-224791:2822288') // 2.4.3-105
    implementation fg.deobf('com.progwml6.natura:natura:1.12.2-4.3.2.69')
    implementation fg.deobf('curse.maven:projecte-226410:2702991') // 1.4.1
    implementation fg.deobf('curse.maven:valkyriecompat-289532:2691540') // 2.0.20.1
    implementation fg.deobf('curse.maven:valkyrielib-245480:2691542') // 2.0.20.1
    implementation fg.deobf('curse.maven:environmental-tech-245453:2691536') // 2.0.20.1
    implementation 'net.industrial-craft:industrialcraft-2:2.8.170-ex112:api'
    implementation fg.deobf('curse.maven:advanced-solar-panels-252714:2652182') // 4.2.1
    implementation fg.deobf('curse.maven:natural-absorption-224296:2678478') // 1.0.0
    implementation fg.deobf('curse.maven:redstone-repository-revolved-300750:2695517') // 1.4.0-dev
    implementation fg.deobf('curse.maven:solar-flux-reborn-246974:3050838') // 12.4.11
    implementation fg.deobf('com.enderio.core:EnderCore:1.12.2-0.5.76')
    implementation fg.deobf('com.enderio:EnderIO:1.12.2-5.2.59') { exclude group: "deobf.com.enderio.core" }
    implementation fg.deobf('net.sengir.forestry:forestry_1.12.2:5.8.2.387')
    implementation fg.deobf('morph.avaritia:Avaritia:1.12.2-3.3.0.33:universal')
    implementation 'net.darkhax.bookshelf:Bookshelf-1.12.2:2.3.590'
    implementation 'net.darkhax.gamestages:GameStages-1.12.2:2.0.123'
    implementation fg.deobf('curse.maven:tinkers-tool-leveling-250957:2630860') // 1.1.0
}

// when forgegradle deobfs dependency jars, it'll try to cheat and grab the sources jar and remap *that* to avoid decompiling
// however, since we use IDE builds instead of delegating to maven, this means pre-deobf'd sources jars that are built
// on different deobf mappings versions will completely F up the build with class/member resolution errors
// this is a dumb workaround for that: we just delete the tasks that do the cheating and thus force forge to deobf built jars
/*Set SOURCES_BLACKLIST = ['CoFHCore-1.12.2']
afterEvaluate {
    tasks.deobfDummyTask.dependsOn.removeIf {
        if (it.hasProperty('inJar')) {
            def name = it.inJar.name
            if (name.endsWith('-sources.jar')) {
                def artifact = name.substring(0, name.substring(0, name.length() - 12).lastIndexOf('-'))
                print "Found sources jar: $artifact"
                if (artifact in SOURCES_BLACKLIST) {
                    println " (BLACKLISTED)"
                    return true
                } else {
                    println()
                }
            }
        }
        return false
    }
}*/

jar {
    manifest {
        attributes([
                "Specification-Title": "tconevo",
                "Specification-Vendor": "phantamanta44",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"phantamanta44",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "FMLAT": "tconevo_at.cfg",
                "FMLCorePluginContainsFMLMod": "true",
                "FMLCorePlugin": "xyz.phanta.tconevo.coremod.TconEvoCoreMod"
        ])
    }
}

jar.finalizedBy('reobfJar')

processResources {
    // don't copy asset generation scripts
    exclude '**/*.js'
    exclude '**/*.py'
    exclude '**/*.sh'
}
